declare class ProgressBar {
    private total;
    private current;
    private description;
    private width;
    private color;
    private startTime;
    private isFinished;
    constructor(total: number, description?: string, width?: number, color?: string);
    update(current: number): void;
    increment(step?: number): void;
    stop(): void;
    private getElapsedTime;
    private render;
}
declare class Logger {
    static col: {
        reset: string;
        red: string;
        yellow: string;
        blue: string;
        magenta: string;
        green: string;
        gray: string;
        cyan: string;
        white: string;
        brightRed: string;
        brightGreen: string;
        brightYellow: string;
        brightBlue: string;
        brightMagenta: string;
        brightCyan: string;
        brightWhite: string;
        bgRed: string;
        bgGreen: string;
        bgYellow: string;
        bgBlue: string;
        bgMagenta: string;
        bgCyan: string;
        bgWhite: string;
        bgBrightBlack: string;
        bgGray: string;
        bgBrightRed: string;
        bgBrightGreen: string;
        bgBrightYellow: string;
        bgBrightBlue: string;
        bgBrightMagenta: string;
        bgBrightCyan: string;
        bgBrightWhite: string;
        bold: string;
        underline: string;
        reverse: string;
        blink: string;
        hidden: string;
        strikethrough: string;
    };
    private prefix;
    constructor(prefix?: string);
    private formatTime;
    private log;
    error(...args: any[]): void;
    warn(...args: any[]): void;
    info(...args: any[]): void;
    debug(...args: any[]): void;
    success(...args: any[]): void;
    createProgressBar(total: number, options?: {
        description?: string;
        width?: number;
        color?: string;
    }): ProgressBar;
}
export = Logger;
